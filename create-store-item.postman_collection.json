{
	"info": {
		"_postman_id": "bffe2585-d5bd-43bc-b7c6-4fcae06ee066",
		"name": "User create store and item",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "9517664"
	},
	"item": [
		{
			"name": "User create store and item",
			"item": [
				{
					"name": "/register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"postman.clearEnvironmentVariable(\"access_token\");\r",
									"\r",
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;\r",
									"\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"\r",
									"tests[\"User created successfully\"] = jsonData.message === 'User created successfully.';\r",
									"\r",
									"tests[\"Content-Type is present in response\"] = postman.getResponseHeader('Content-Type');\r",
									"\r",
									"tests[\"Content-Type is 'application/json'\"] = postman.getResponseHeader('Content-Type') === 'application/json';"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"followOriginalHttpMethod": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"user15\",\r\n    \"password\": \"abcxyz\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{url}}/register"
					},
					"response": []
				},
				{
					"name": "/auth",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"\r",
									"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);\r",
									"\r",
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"\r",
									"tests[\"Body contains access_token\"] = responseBody.has('access_token');\r",
									"\r",
									"tests[\"Response time is less than 150ms\"] = responseTime < 150;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"user15\",\r\n    \"password\": \"abcxyz\"\r\n}"
						},
						"url": "{{url}}/auth"
					},
					"response": []
				},
				{
					"name": "/store/test_store",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"tests[\"Store name is returned\"] = jsonData.name === 'test_store';\r",
									"tests[\"Store id is returned\"] = jsonData.id === 1;\r",
									"tests[\"Store items are an empty list\"] = jsonData.items === 0;\r",
									"\r",
									"tests[\"Successfully POST request\"] = responseCode.code === 201;\r",
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;\r",
									"\r",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\r",
									"tests[\"Content-Type is 'application/json'\"] = postman.getResponseHeader(\"Content-Type\") === 'application/json';\r",
									"\r",
									"postman.setEnvironmentVariable(\"store_id\", jsonData.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": "{{url}}/store/test_store"
					},
					"response": []
				},
				{
					"name": "/item/test_item",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"tests[\"Item name is returned\"] = jsonData.name === 'test_item';\r",
									"tests[\"Item price is returned\"] = jsonData.price === 17.99;\r",
									"tests[\"Successfully POST request\"] = responseCode.code === 201;\r",
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;\r",
									"\r",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\r",
									"tests[\"Content-Type is 'application/json'\"] = postman.getResponseHeader(\"Content-Type\") === 'application/json';"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"price\": 17.99,\r\n    \"store_id\": {{store_id}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{url}}/item/test_item"
					},
					"response": []
				},
				{
					"name": "/stores",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"tests[\"Store 'test_store' is returned\"] = jsonData.stores[0].name === 'test_store';\r",
									"tests[\"ID of store 'test_store' is returned\"] = jsonData.stores[0].id === parseInt(environment.store_id);\r",
									"\r",
									"tests[\"Item 'test_item' is returned inside 'test_store'\"] = jsonData.stores[0].items[0].name === 'test_item';\r",
									"tests[\"Item 'test_item' price is returned inside 'test_store'\"] = jsonData.stores[0].items[0].price === 17.99;\r",
									"\r",
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;\r",
									"\r",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\r",
									"tests[\"Content-Type is 'application/json'\"] = postman.getResponseHeader(\"Content-Type\") === 'application/json';"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{url}}/stores"
					},
					"response": []
				},
				{
					"name": "/store/test_store",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"tests[\"Store name is returned\"] = jsonData.message === 'Store deleted';\r",
									"tests[\"Successful POST request\"] = responseCode.code === 200;\r",
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;\r",
									"\r",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\r",
									"tests[\"Content-Type is 'application/json'\"] = postman.getResponseHeader(\"Content-Type\") === 'application/json';"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": "{{url}}/store/test_store"
					},
					"response": []
				},
				{
					"name": "/item/test_item",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"tests[\"Message is returned\"] = jsonData.message === 'Item deleted';\r",
									"tests[\"Successful POST request\"] = responseCode.code === 200;\r",
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;\r",
									"\r",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\r",
									"tests[\"Content-Type is 'application/json'\"] = postman.getResponseHeader(\"Content-Type\") === 'application/json';"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": "{{url}}/item/test_item"
					},
					"response": []
				}
			]
		}
	]
}